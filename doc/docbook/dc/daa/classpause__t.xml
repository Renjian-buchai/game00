<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classpause__t" xml:lang="en-US">
<title>pause_t Class Reference</title>
<indexterm><primary>pause_t</primary></indexterm>
<para>
<computeroutput>#include &lt;pause.hh&gt;</computeroutput>
</para>
<para>Inheritance diagram for pause_t:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="../../dc/daa/classpause__t.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classpause__t_1a840256e71d9ff0f489090fff8f07c946">pause_t</link> (<link linkend="_classgame">game</link> *<link linkend="_classscene_1ae9987da046dc0255632015f0e42a546c">context</link>)</para>

<para>Construct a new pause t object. </para>
</listitem>
            <listitem><para><link linkend="_classpause__t_1a8e6961a2a9fb61c99e92face62126593">~pause_t</link> ()</para>

<para>Destroy the pause t object. </para>
</listitem>
            <listitem><para>std::pair&lt; <link linkend="_enum_8hh_1a72e129a3b1e399b1f98da21557f0fd8a">scenes</link>, <link linkend="_enum_8hh_1ae5fd02a37eaf8afa38cba1e723317dab">sceneData</link> &gt; <link linkend="_classpause__t_1ac738a9a7bc4671c59a8a9eacd9d0e0ca">update</link> () override</para>

<para>Update logic for the pause menu. </para>
</listitem>
            <listitem><para>void <link linkend="_classpause__t_1a021e3734b6d7c0688490809b5f87d8c8">render</link> () override</para>

<para>Renders menu, and buttons. </para>
</listitem>
            <listitem><para>std::pair&lt; <link linkend="_enum_8hh_1a72e129a3b1e399b1f98da21557f0fd8a">scenes</link>, <link linkend="_enum_8hh_1ae5fd02a37eaf8afa38cba1e723317dab">sceneData</link> &gt; <link linkend="_classpause__t_1a267e138e3c13edfb2e0c57cb9100ceac">handle</link> (SDL_Event &amp;event) override</para>

<para>Handles hovers. </para>
</listitem>
        </itemizedlist>
</simplesect>
Public Member Functions inherited from <link linkend="_classscene">scene</link>        <itemizedlist>
            <listitem><para>SDL_Texture * <link linkend="_classscene_1a5d4681a41f14704a05c4f84569888061">loadTexture</link> (const char *path)</para>

<para>Loads texture based on path. </para>
</listitem>
            <listitem><para><link linkend="_classscene_1a1012571c9524a29524b8b9d680715e90">scene</link> (<link linkend="_classgame">game</link> *gameContext)</para>

<para>Construct a new scene object. </para>
</listitem>
            <listitem><para>virtual <link linkend="_classscene_1aa97c9c1f46aa44e63223a737fcdcb496">~scene</link> ()</para>

<para>Destroy the scene object. </para>
</listitem>
        </itemizedlist>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para>SDL_Texture * <link linkend="_classpause__t_1abc176f557fb1f594687017c268bbdfe4">overlay</link></para>

<para>Pause overlay. </para>
</listitem>
            <listitem><para>SDL_Texture * <link linkend="_classpause__t_1a3e20af849346bcd336f939865a270c5c">resume</link></para>

<para>Resume button when not hovered. </para>
</listitem>
            <listitem><para>SDL_Texture * <link linkend="_classpause__t_1a0c32a4f98b58aa3806699382970ec491">resumeHover</link></para>

<para>Resume button when hovered over. </para>
</listitem>
            <listitem><para>SDL_Texture * <link linkend="_classpause__t_1af9103128c6bc5af691f2fc46209e3217">resumeState</link></para>

<para>State of the resume button. </para>
</listitem>
            <listitem><para>SDL_Rect <link linkend="_classpause__t_1ae945e4a533d1de46870bffe0e838d8ae">resumePos</link></para>
</listitem>
            <listitem><para>SDL_Texture * <link linkend="_classpause__t_1a148437ac9cfb0970822384f99c03ac77">exit</link></para>

<para>Exit button when not hovered. </para>
</listitem>
            <listitem><para>SDL_Texture * <link linkend="_classpause__t_1a3e67f3211198db082a0ac245dad42212">exitHover</link></para>

<para>Exit button when hovered over. </para>
</listitem>
            <listitem><para>SDL_Texture * <link linkend="_classpause__t_1ae058f8bee107894a18b483c2433b719e">exitState</link></para>

<para>State of the exit button. </para>
</listitem>
            <listitem><para>SDL_Rect <link linkend="_classpause__t_1a9034485c8caf7cd1dfddf7f300542747">exitPos</link></para>

<para>Position of the exit button. </para>
</listitem>
        </itemizedlist>
</simplesect>
Public Attributes inherited from <link linkend="_classscene">scene</link>        <itemizedlist>
            <listitem><para><link linkend="_classgame">game</link> * <link linkend="_classscene_1ae9987da046dc0255632015f0e42a546c">context</link></para>

<para>Game context. </para>
</listitem>
        </itemizedlist>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classpause__t_1a840256e71d9ff0f489090fff8f07c946"/><section>
    <title>pause_t()</title>
<indexterm><primary>pause_t</primary><secondary>pause_t</secondary></indexterm>
<indexterm><primary>pause_t</primary><secondary>pause_t</secondary></indexterm>
<para><computeroutput>pause_t::pause_t (<link linkend="_classgame">game</link> * context)</computeroutput></para><para>

<para>Construct a new pause t object. </para>
</para>

<para>Called only once when WM is initialised</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>context</entry><entry>
<para>game context </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_classpause__t_1a8e6961a2a9fb61c99e92face62126593"/><section>
    <title>~pause_t()</title>
<indexterm><primary>~pause_t</primary><secondary>pause_t</secondary></indexterm>
<indexterm><primary>pause_t</primary><secondary>~pause_t</secondary></indexterm>
<para><computeroutput>pause_t::~pause_t ( )</computeroutput></para><para>

<para>Destroy the pause t object. </para>
</para>

<para>Called only when the wm is destroyed </para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classpause__t_1a267e138e3c13edfb2e0c57cb9100ceac"/><section>
    <title>handle()</title>
<indexterm><primary>handle</primary><secondary>pause_t</secondary></indexterm>
<indexterm><primary>pause_t</primary><secondary>handle</secondary></indexterm>
<para><computeroutput>std::pair&lt; <link linkend="_enum_8hh_1a72e129a3b1e399b1f98da21557f0fd8a">scenes</link>, <link linkend="_enum_8hh_1ae5fd02a37eaf8afa38cba1e723317dab">sceneData</link> &gt; pause_t::handle (SDL_Event &amp; event)<computeroutput>[override]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Handles hovers. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>event</entry><entry>
<para>Event to be handled </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>std::pair&lt;scenes, sceneData&gt;Returns the scene to be changed to, and the data that scene should contain </para>
</formalpara>
</para>
<para>
Implements <link linkend="_classscene_1a56dec35146b15669e3cf054ced2f4be2">scene</link>.</para>
</section>
<anchor xml:id="_classpause__t_1a021e3734b6d7c0688490809b5f87d8c8"/><section>
    <title>render()</title>
<indexterm><primary>render</primary><secondary>pause_t</secondary></indexterm>
<indexterm><primary>pause_t</primary><secondary>render</secondary></indexterm>
<para><computeroutput>void pause_t::render ( )<computeroutput>[override]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Renders menu, and buttons. </para>
</para>
<para>
Implements <link linkend="_classscene_1a7c218380f822d46bee781520e855a7de">scene</link>.</para>
</section>
<anchor xml:id="_classpause__t_1ac738a9a7bc4671c59a8a9eacd9d0e0ca"/><section>
    <title>update()</title>
<indexterm><primary>update</primary><secondary>pause_t</secondary></indexterm>
<indexterm><primary>pause_t</primary><secondary>update</secondary></indexterm>
<para><computeroutput>std::pair&lt; <link linkend="_enum_8hh_1a72e129a3b1e399b1f98da21557f0fd8a">scenes</link>, <link linkend="_enum_8hh_1ae5fd02a37eaf8afa38cba1e723317dab">sceneData</link> &gt; pause_t::update ( )<computeroutput>[override]</computeroutput>, <computeroutput>[virtual]</computeroutput></computeroutput></para><para>

<para>Update logic for the pause menu. </para>
</para>

<para>Realistically, does absolutely nothing.</para>

<para><formalpara><title>Returns</title>

<para>std::pair&lt;scenes, sceneData&gt; Returns the scene to be changed to, and the data that scene should contain </para>
</formalpara>
</para>
<para>
Implements <link linkend="_classscene_1a34b71ea2aea3fd3c007786e75be817c7">scene</link>.</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_classpause__t_1a148437ac9cfb0970822384f99c03ac77"/><section>
    <title>exit</title>
<indexterm><primary>exit</primary><secondary>pause_t</secondary></indexterm>
<indexterm><primary>pause_t</primary><secondary>exit</secondary></indexterm>
<para><computeroutput>SDL_Texture* pause_t::exit</computeroutput></para><para>

<para>Exit button when not hovered. </para>
</para>
</section>
<anchor xml:id="_classpause__t_1a3e67f3211198db082a0ac245dad42212"/><section>
    <title>exitHover</title>
<indexterm><primary>exitHover</primary><secondary>pause_t</secondary></indexterm>
<indexterm><primary>pause_t</primary><secondary>exitHover</secondary></indexterm>
<para><computeroutput>SDL_Texture* pause_t::exitHover</computeroutput></para><para>

<para>Exit button when hovered over. </para>
</para>
</section>
<anchor xml:id="_classpause__t_1a9034485c8caf7cd1dfddf7f300542747"/><section>
    <title>exitPos</title>
<indexterm><primary>exitPos</primary><secondary>pause_t</secondary></indexterm>
<indexterm><primary>pause_t</primary><secondary>exitPos</secondary></indexterm>
<para><computeroutput>SDL_Rect pause_t::exitPos</computeroutput></para><para>

<para>Position of the exit button. </para>
</para>
</section>
<anchor xml:id="_classpause__t_1ae058f8bee107894a18b483c2433b719e"/><section>
    <title>exitState</title>
<indexterm><primary>exitState</primary><secondary>pause_t</secondary></indexterm>
<indexterm><primary>pause_t</primary><secondary>exitState</secondary></indexterm>
<para><computeroutput>SDL_Texture* pause_t::exitState</computeroutput></para><para>

<para>State of the exit button. </para>
</para>
</section>
<anchor xml:id="_classpause__t_1abc176f557fb1f594687017c268bbdfe4"/><section>
    <title>overlay</title>
<indexterm><primary>overlay</primary><secondary>pause_t</secondary></indexterm>
<indexterm><primary>pause_t</primary><secondary>overlay</secondary></indexterm>
<para><computeroutput>SDL_Texture* pause_t::overlay</computeroutput></para><para>

<para>Pause overlay. </para>
</para>
</section>
<anchor xml:id="_classpause__t_1a3e20af849346bcd336f939865a270c5c"/><section>
    <title>resume</title>
<indexterm><primary>resume</primary><secondary>pause_t</secondary></indexterm>
<indexterm><primary>pause_t</primary><secondary>resume</secondary></indexterm>
<para><computeroutput>SDL_Texture* pause_t::resume</computeroutput></para><para>

<para>Resume button when not hovered. </para>
</para>
</section>
<anchor xml:id="_classpause__t_1a0c32a4f98b58aa3806699382970ec491"/><section>
    <title>resumeHover</title>
<indexterm><primary>resumeHover</primary><secondary>pause_t</secondary></indexterm>
<indexterm><primary>pause_t</primary><secondary>resumeHover</secondary></indexterm>
<para><computeroutput>SDL_Texture* pause_t::resumeHover</computeroutput></para><para>

<para>Resume button when hovered over. </para>
</para>
</section>
<anchor xml:id="_classpause__t_1ae945e4a533d1de46870bffe0e838d8ae"/><section>
    <title>resumePos</title>
<indexterm><primary>resumePos</primary><secondary>pause_t</secondary></indexterm>
<indexterm><primary>pause_t</primary><secondary>resumePos</secondary></indexterm>
<para><computeroutput>SDL_Rect pause_t::resumePos</computeroutput></para>
<para>Position of the resume button </para>
</section>
<anchor xml:id="_classpause__t_1af9103128c6bc5af691f2fc46209e3217"/><section>
    <title>resumeState</title>
<indexterm><primary>resumeState</primary><secondary>pause_t</secondary></indexterm>
<indexterm><primary>pause_t</primary><secondary>resumeState</secondary></indexterm>
<para><computeroutput>SDL_Texture* pause_t::resumeState</computeroutput></para><para>

<para>State of the resume button. </para>
</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
include/scenes/<link linkend="_pause_8hh">pause.hh</link>src/game/<link linkend="_pause_8cc">pause.cc</link></section>
</section>
